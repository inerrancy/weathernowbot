from telegram import Bot
from telegram import Update
from telegram import InlineKeyboardButton
from telegram import InlineKeyboardMarkup
from telegram.ext import Updater
from telegram.ext import CallbackQueryHandler
from telegram.ext import CommandHandler
from telegram.ext import MessageHandler
from telegram.ext import Filters
import pyowm
import config

CALLBACK_BUTTON_RUSSIAN_LANGUAGE = "callback_button_russian_language"
CALLBACK_BUTTON_ENGLISH_LANGUAGE = "callback_button_english_language"

TITLES = {
    CALLBACK_BUTTON_RUSSIAN_LANGUAGE: "–†—É—Å—Å–∫–∏–π üá∑üá∫",
    CALLBACK_BUTTON_ENGLISH_LANGUAGE: "English üá¨üáß/üá∫üá∏",
}


def get_language_keyboard():
    keyboard = [
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON_RUSSIAN_LANGUAGE],
                                 callback_data=CALLBACK_BUTTON_RUSSIAN_LANGUAGE),
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON_ENGLISH_LANGUAGE],
                                 callback_data=CALLBACK_BUTTON_ENGLISH_LANGUAGE),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)


def do_start(bot: Bot, update: Update):
    bot.send_message(
        chat_id=update.message.chat_id,
        text="–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ–≥–æ–¥—ã, —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –µ—Å—Ç—å –≤ –º–µ–Ω—é üëáüèª\n"
             "–Ø —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç üòâ\n"
             "–ò –µ—â–µ, —Å—Ç–∞—Ä–∞–π—Å—è –≤–≤–æ–¥–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –ª–∞—Ç–∏–Ω–Ω–∏—Ü–µ–π, —è –ø–ª–æ—Ö–æ –ø–æ–Ω–∏–º–∞—é –ø–æ-—Ä—É—Å—Å–∫–∏ üòÖ\n"
             "–ß—É—Ç—å –Ω–µ –∑–∞–±—ã–ª, –≤—ã–±–µ—Ä–∏ —è–∑—ã–∫ –≤—ã–¥–∞–≤–∞–µ–º–æ–π –ø–æ–≥–æ–¥—ã üëáüèª",
        reply_markup=get_language_keyboard(),
    )


def help_message(bot: Bot, update: Update):
    bot.send_message(
        chat_id=update.message.chat_id,
        text="–ù–∞–¥–æ –∂–µ! –¢—ã –æ–±—Ä–∞—Ç–∏–ª—Å—è –∫–æ –º–Ω–µ –∑–∞ –ø–æ–º–æ—â—å—é üôÑ\n"
             "–¢–∞–∫ —É–∂ –∏ –±—ã—Ç—å —è —Ç–µ–±–µ –ø–æ–º–æ–≥—É üòö\n"
             "–ù–∞–ø–æ–º–Ω—é —Ç–µ–±–µ, —á—Ç–æ —è –±–æ—Ç –ø–æ–≥–æ–¥—ã. –¢—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫–æ–º–∞–Ω–¥–æ–π /show_weather + –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –∏–Ω–¥–µ–∫—Å —Ç–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞.\n"
             "–ò –ø–æ–º–Ω–∏, —á—Ç–æ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –µ—Å—Ç—å –≤ –º–µ–Ω—é üëáüèª\n",
    )


def change_language(bot: Bot, update: Update):
    bot.send_message(
        chat_id=update.message.chat_id,
        text="–í—ã–±–µ—Ä–∏ —è–∑—ã–∫/Choose language",
        reply_markup=get_language_keyboard(),
    )


def keyboard_callback_handler(bot: Bot, update: Update):
    global select_language
    query = update.callback_query
    selector = query.data

    if selector == CALLBACK_BUTTON_RUSSIAN_LANGUAGE:
        select_language = "ru"
        bot.send_message(
            chat_id=update.effective_message.chat_id,
            text="–Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω üá∑üá∫",
        )
    elif selector == CALLBACK_BUTTON_ENGLISH_LANGUAGE:
        select_language = "en"
        bot.send_message(
            chat_id=update.effective_message.chat_id,
            text="Language successfully selected üá¨üáß/üá∫üá∏"
        )
    return select_language


def show_weather(bot: Bot, update: Update, args):
    city = ''.join(str(x) for x in args)
    owm = pyowm.OWM(config.TOKEN_OWM, language=select_language)
    city_weather = owm.weather_at_place(city)
    get_weather = city_weather.get_weather()
    wind = get_weather.get_wind()["speed"]
    deg_wind = get_weather.get_wind()["deg"]
    humidity = get_weather.get_humidity()
    description = get_weather.get_detailed_status()
    if select_language == "ru":
        temperature = get_weather.get_temperature("celsius")["temp"]
        bot.send_message(
            chat_id=update.message.chat_id,
            text=f"–í –≥–æ—Ä–æ–¥–µ {str(city)} —Å–µ–π—á–∞—Å {str(description)}\n"
                 f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {str(temperature)} ¬∞C\n"
                 f"–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {str(wind)} –º/—Å\n"
                 f"–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {str(deg_wind)}¬∞\n"
                 f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {str(humidity)} %",
        )
    elif select_language == "en":
        temperature = get_weather.get_temperature("fahrenheit")["temp"]
        bot.send_message(
            chat_id=update.message.chat_id,
            text=f"In {str(city)} is {str(description)}\n"
                 f"Temperature: {str(temperature)} ¬∞F\n"
                 f"Wind: {str(wind)} meters per second\n"
                 f"Direction: {str(deg_wind)}¬∞\n"
                 f"Humidity: {str(humidity)} %",
        )


def unknown_command(bot: Bot, update: Update):
    bot.send_message(
        chat_id=update.message.chat_id,
        text="–Ø —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ –∑–Ω–∞—é, –∏ –Ω–∏—á–µ–≥–æ —Å–¥–µ–ª–∞—Ç—å –Ω–µ –º–æ–≥—É, —É –º–µ–Ω—è –ª–∞–ø–∫–∏ üåù\n"
             "–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –µ—Å—Ç—å –≤ –º–µ–Ω—é üëáüèª"
    )


def main():
    bot = Bot(
        token=config.TOKEN_TG,
        base_url=config.TG_API_URL,
    )
    updater = Updater(
        bot=bot,
    )

    start_handler = CommandHandler("start", do_start)
    help_handler = CommandHandler("help", help_message)
    change_language_handler = CommandHandler("change_language", change_language)
    show_weather_handler = CommandHandler("show_weather", show_weather, pass_args=True)
    unknown_command_handler = MessageHandler(Filters.command, unknown_command)
    keyboard_callback = CallbackQueryHandler(callback=keyboard_callback_handler)

    updater.dispatcher.add_handler(start_handler)
    updater.dispatcher.add_handler(help_handler)
    updater.dispatcher.add_handler(change_language_handler)
    updater.dispatcher.add_handler(show_weather_handler)
    updater.dispatcher.add_handler(unknown_command_handler)
    updater.dispatcher.add_handler(keyboard_callback)

    updater.start_polling()
    updater.idle()


if __name__ == "__main__":
    main()
